{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set custom_classes = paragraph.field_classes.value ? paragraph.field_classes.value|split(" ") : [] %}

{% if paragraph.field_background %}
  {% set custom_classes = custom_classes|merge(["bg-" ~ paragraph.field_background.value]) %}
{% endif %}

{% if paragraph.field_vertical_padding %}
  {% set custom_classes = custom_classes|merge(["py-" ~ paragraph.field_vertical_padding.value]) %}
{% endif %}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'container'
  ]|merge(custom_classes)
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

      <div class="row">
        <div class="col-md-6 text-light position-relative">
          <svg class="position-absolute w-100 h-100 opacity-75" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev/svgjs" viewBox="0 0 800 800"><defs><linearGradient x1="50%" y1="0%" x2="50%" y2="100%" id="cccoil-grad"><stop stop-color="hsl(206, 75%, 49%)" stop-opacity="1" offset="0%"></stop><stop stop-color="#7fb842" stop-opacity="1" offset="100%"></stop></linearGradient></defs><g stroke="url(#cccoil-grad)" fill="none" stroke-linecap="round"><circle r="363" cx="400" cy="400" stroke-width="7" stroke-dasharray="1939 2281" opacity="0.05"></circle><circle r="346.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="1762 2177" opacity="0.10"></circle><circle r="330" cx="400" cy="400" stroke-width="7" stroke-dasharray="1595 2073" opacity="0.14"></circle><circle r="313.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="1435 1970" opacity="0.19"></circle><circle r="297" cx="400" cy="400" stroke-width="7" stroke-dasharray="1284 1866" opacity="0.23"></circle><circle r="280.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="1141 1762" opacity="0.28"></circle><circle r="264" cx="400" cy="400" stroke-width="7" stroke-dasharray="1007 1659" opacity="0.32"></circle><circle r="247.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="881 1555" opacity="0.37"></circle><circle r="231" cx="400" cy="400" stroke-width="7" stroke-dasharray="764 1451" opacity="0.41"></circle><circle r="214.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="655 1348" opacity="0.46"></circle><circle r="198" cx="400" cy="400" stroke-width="7" stroke-dasharray="554 1244" opacity="0.50"></circle><circle r="181.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="462 1140" opacity="0.55"></circle><circle r="165" cx="400" cy="400" stroke-width="7" stroke-dasharray="378 1037" opacity="0.59"></circle><circle r="148.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="302 933" opacity="0.64"></circle><circle r="132" cx="400" cy="400" stroke-width="7" stroke-dasharray="235 829" opacity="0.68"></circle><circle r="115.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="176 726" opacity="0.73"></circle><circle r="99" cx="400" cy="400" stroke-width="7" stroke-dasharray="126 622" opacity="0.77"></circle><circle r="82.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="84 518" opacity="0.82"></circle><circle r="66" cx="400" cy="400" stroke-width="7" stroke-dasharray="50 415" opacity="0.86"></circle><circle r="49.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="25 311" opacity="0.91"></circle><circle r="33" cx="400" cy="400" stroke-width="7" stroke-dasharray="8 207" opacity="0.95"></circle><circle r="16.5" cx="400" cy="400" stroke-width="7" stroke-dasharray="0 104" opacity="1.00"></circle></g></svg>
          <div class="position-relative h-100 py-5">
            {{ content.field_body }}
          </div>
        </div>
        <div class="col-md-6 text-light">
          {{ content.field_image }}
        </div>
      </div>

    {% endblock %}
  </div>
{% endblock paragraph %}
